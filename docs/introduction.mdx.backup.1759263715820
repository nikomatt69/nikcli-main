---\ntitle: Introduction\ndescription: \"NikCLI - Context-Aware AI Development Assistant\"\n---\n\n<img\n  className=\"block dark:hidden\"\n  src=\"/images/hero-light.png\"\n  alt=\"Hero Light\"\n/>\n<img\n  className=\"hidden dark:block\"\n  src=\"/images/hero-dark.png\"\n  alt=\"Hero Dark\"\n/>\n\n## What is NikCLI?\n\nNikCLI is a **production-ready autonomous AI development assistant** that provides an intelligent command-line interface for software development. It combines conversational AI with autonomous code generation, file manipulation, and project management capabilities.\n\n<CardGroup cols={2}>\n  <Card\n    title=\"Autonomous Development\"\n    icon=\"robot\"\n    href=\"/user-guide/autonomous-mode\"\n  >\n    Let AI handle complex development tasks automatically\n  </Card>\n  <Card\n    title=\"Multi-Agent System\"\n    icon=\"users\"\n    href=\"/agent-system/architecture\"\n  >\n    Specialized agents working together for optimal results\n  </Card>\n  <Card title=\"Context-Aware\" icon=\"brain\" href=\"/user-guide/workflow-patterns\">\n    Understands your project structure and coding patterns\n  </Card>\n  <Card\n    title=\"Production Ready\"\n    icon=\"shield-check\"\n    href=\"/advanced/configuration\"\n  >\n    Enterprise-grade security and reliability\n  </Card>\n</CardGroup>\n\n## Key Features\n\n### ðŸ¤– Intelligent AI Agents\n\n- **Universal Agent**: Comprehensive full-stack development capabilities\n- **Specialized Agents**: React, Backend, DevOps, and domain-specific experts\n- **Multi-Agent Orchestration**: Parallel execution and coordination\n\n### ðŸ’¬ Natural Language Interface\n\n- **Conversational Chat**: Natural language commands and interactions\n- **Stream Processing**: Real-time feedback and progress tracking\n- **Interactive Approval**: Review and approve automated changes\n\n### ðŸ”¨ Powerful Tool System\n\n- **File Operations**: Read, write, edit, search with security policies\n- **Command Execution**: Bash, npm, git operations with sandboxing\n- **Project Analysis**: Dependency detection and technology identification\n\n### ðŸ§  Context & Memory\n\n- **Workspace-Aware**: Automatic project understanding\n- **RAG System**: Intelligent code recommendations\n- **Token Management**: Optimized context handling\n\n## Supported AI Providers\n\n<Tabs>\n  <Tab title=\"Anthropic Claude\">\n    Primary provider with advanced reasoning capabilities\n    ```bash\n    export ANTHROPIC_API_KEY=\"your-api-key\"\n    ```\n  </Tab>\n  <Tab title=\"OpenAI GPT\">\n    Secondary provider for diverse model options\n    ```bash\n    export OPENAI_API_KEY=\"your-api-key\"\n    ```\n  </Tab>\n  <Tab title=\"Google Gemini\">\n    Alternative provider with multimodal capabilities\n    ```bash\n    export GOOGLE_GENERATIVE_AI_API_KEY=\"your-api-key\"\n    ```\n  </Tab>\n  <Tab title=\"Ollama\">\n    Local models for privacy and offline usage\n    ```bash\n    # No API key required for local models\n    # Ensure the Ollama daemon is running (default 127.0.0.1:11434)\n    ollama serve\n\n    # Inside NikCLI, switch model via slash command\n    /model llama3.1:8b\n    ```\n\n  </Tab>\n</Tabs>\n\n## Technology Stack\n\n<AccordionGroup>\n  <Accordion title=\"Core Technologies\">\n    - **TypeScript 5.9+**: Modern language features and strict typing\n    - **Node.js 18+**: Runtime environment with latest features\n    - **AI SDK**: Unified abstraction for multiple AI providers\n    - **Vitest 3.2+**: Test runner for unit/integration tests\n  </Accordion>\n\n  <Accordion title=\"Terminal Interface\">\n    - **Chalk 5.3+**: Colored output and visual hierarchy\n    - **Boxen 7.1+**: Structured information display\n    - **Readline**: Interactive input with completion\n    - **Ora 8.0+**: Loading spinners and progress indicators\n  </Accordion>\n\n  <Accordion title=\"Development Tools\">\n    - **Biome 2.2+**: Code quality enforcement (replaces ESLint)\n    - **TypeScript Compiler**: Strict compilation settings\n    - **Path Aliases**: Clean import structure\n    - **Binary Distribution**: Cross-platform executables via pkg\n  </Accordion>\n</AccordionGroup>\n\n## Architecture Overview\n\n```mermaid\ngraph TB\n    A[CLI Entry Point] --> B[Orchestrator Service]\n    B --> C[Agent Service]\n    B --> D[Tool Service]\n    B --> E[Planning Service]\n\n    C --> F[Universal Agent]\n    C --> G[Specialized Agents]\n\n    D --> H[File Tools]\n    D --> I[Command Tools]\n    D --> J[Security Policies]\n\n    E --> K[Task Planning]\n    E --> L[Workflow Execution]\n\n    style A fill:#e1f5fe\n    style B fill:#f3e5f5\n    style C fill:#e8f5e8\n    style D fill:#fff3e0\n    style E fill:#fce4ec\n```\n\n## Quick Start\n\nGet started with NikCLI in just a few minutes:\n\n<Steps>\n  <Step title=\"Install NikCLI\">\n    ```bash\n    npm install -g @nicomatt69/nikcli\n    ```\n  </Step>\n  <Step title=\"Set API Key\">\n    ```bash\n    export ANTHROPIC_API_KEY=\"your-api-key\"\n    ```\n  </Step>\n  <Step title=\"Start Interactive Mode\">\n    ```bash\n    nikcli\n    ```\n  </Step>\n  <Step title=\"Try Your First Command\">\n    ```bash\n    > /help\n    ```\n  </Step>\n</Steps>\n\n<Card\n  title=\"Ready to get started?\"\n  icon=\"rocket\"\n  href=\"/quickstart/installation\"\n>\n  Follow our comprehensive quickstart guide to set up NikCLI and start building with AI assistance.\n</Card>\n\n## Community and Support\n\n<CardGroup cols={2}>\n  <Card\n    title=\"GitHub Repository\"\n    icon=\"github\"\n    href=\"https://github.com/nikomatt69/nikcli-main\"\n  >\n    Source code, issues, and contributions\n  </Card>\n  <Card title=\"Documentation\" icon=\"book\" href=\"/user-guide/overview\">\n    Comprehensive guides and references\n  </Card>\n</CardGroup>\n","parameter name="backup">true
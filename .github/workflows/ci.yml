name: NikCLI CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published, created]

env:
  NODE_VERSION: "18"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run

      - name: Run linting
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build CLI
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-build
          path: dist/
          retention-days: 30

  create-binary:
    name: Create Binary
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-build
          path: dist/

      - name: Install dependencies
        run: npm ci

      - name: Create binary with pkg
        run: npx pkg .

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cli-binaries
          path: build/
          retention-days: 30

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build, create-binary]
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-build
          path: dist/

      - name: Download binary artifacts
        uses: actions/download-artifact@v4
        with:
          name: cli-binaries
          path: build/

      - name: Install dependencies
        run: npm ci

      - name: Create distribution package
        run: npm run build:binary

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            export/nikcli-dist.tar.gz
            build/nikcli-macos-arm64
            build/nikcli-macos-x64
            build/nikcli-linux-x64
          body: |
            ## ðŸš€ NikCLI Release ${{ github.event.release.tag_name }}

            ### ðŸ“¦ What's New
            - Enhanced AI-powered CLI with multi-agent architecture
            - Node.js-powered build system for reliability
            - Cross-platform binary distribution

            ### ðŸ”§ Installation

            **Using npm:**
            ```bash
            npm install -g @cadcamfun/nikcli
            ```

            **Direct binary:**
            Download the appropriate binary for your platform from the assets below.

            ### ðŸŽ¯ Quick Start
            ```bash
            nikcli --help
            ```

            ### ðŸ“‹ Changelog
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build documentation
        run: |
          # Add documentation build step if needed
          echo "Documentation build completed"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          destination_dir: .


graph TB
    subgraph "NikCLI CLI System Architecture"
        
        subgraph "Entry Points"
            CLI["src/cli/index.ts<br/>Main CLI Entry (1,844 lines)"]
            BIN["bin/nikcli.js<br/>Binary Entry Point"]
            PKG["package.json<br/>CLI Configuration"]
        end
        
        subgraph "Core CLI Services"
            CLI --> CLI_SERVICE["CLI Service<br/>Command Processing"]
            CLI --> PLANNER["Planning Service<br/>Task Orchestration"]
            CLI --> TOOL_SVC["Tool Service<br/>Tool Registry"]
            CLI --> CONTEXT["Context System<br/>RAG Memory"]
            CLI --> AI_PROVIDER["AI Provider<br/>Multi-Model Support"]
            CLI --> ORCHESTRATOR["Orchestrator Service<br/>Main Coordination"]
        end
        
        subgraph "Agent System"
            ORCHESTRATOR --> UNIVERSAL["Universal Agent<br/>Primary Coordinator"]
            ORCHESTRATOR --> REACT["React Agent<br/>Frontend Development"]
            ORCHESTRATOR --> BACKEND["Backend Agent<br/>API Development"]
            ORCHESTRATOR --> DEVOPS["DevOps Agent<br/>Infrastructure"]
            ORCHESTRATOR --> CODE_REVIEW["Code Review Agent<br/>Quality Assurance"]
            ORCHESTRATOR --> OPTIMIZATION["Optimization Agent<br/>Performance"]
            
            UNIVERSAL --> TASKMASTER["TaskMaster AI<br/>Task Planning"]
        end
        
        subgraph "Command Categories"
            CLI_SERVICE --> BASIC["Basic System<br/>help, quit, clear"]
            CLI_SERVICE --> MODEL_MGMT["Model Management<br/>model, models, set-key"]
            CLI_SERVICE --> CONFIG["Configuration<br/>config, debug, temp, history"]
            CLI_SERVICE --> SESSION["Session Control<br/>new, sessions, export, stats"]
            CLI_SERVICE --> AGENT_MGMT["Agent Management<br/>agents, agent, auto, parallel"]
            CLI_SERVICE --> PLANNING["Planning & Todo<br/>plan, todo, todos"]
            CLI_SERVICE --> SECURITY["Security<br/>security, approve, sandbox"]
            CLI_SERVICE --> FILE_OPS["File Operations<br/>read, write, edit, explore"]
            CLI_SERVICE --> TERMINAL["Terminal<br/>run, exec, command"]
            CLI_SERVICE --> VM["VM Operations<br/>vm, vm-list, vm-exec"]
            CLI_SERVICE --> AI_FEATURES["AI Features<br/>vision, generate, code"]
            CLI_SERVICE --> MEMORY["Memory & Data<br/>memory, snapshot, index"]
        end
        
        subgraph "Tool Registry"
            TOOL_SVC --> FILE_TOOLS["File Operations<br/>read_file, write_file, explore_directory"]
            TOOL_SVC --> EXEC_TOOLS["Execution Tools<br/>execute_command, manage_packages"]
            TOOL_SVC --> ANALYSIS_TOOLS["Analysis Tools<br/>analyze_project, code_analysis, dependency_analysis"]
            TOOL_SVC --> AI_TOOLS["AI Tools<br/>generate_code, web_search, semantic_search"]
            TOOL_SVC --> DEV_TOOLS["Development Tools<br/>ide_context, git_workflow"]
            TOOL_SVC --> DOC_TOOLS["Documentation Tools<br/>doc_search, doc_add, smart_docs_search"]
        end
        
        subgraph "Context & Memory"
            CONTEXT --> WORKSPACE["Workspace Context<br/>Project Structure"]
            CONTEXT --> GIT["Git Context<br/>Repository Info"]
            CONTEXT --> DEPS["Dependencies<br/>Package Analysis"]
            CONTEXT --> RECENT["Recent Files<br/>File History"]
            CONTEXT --> OPEN_FILES["Open Files<br/>Editor State"]
            
            MEMORY --> SNAPSHOTS["Project Snapshots<br/>Save/Restore Points"]
            MEMORY --> INDEX["Search Index<br/>Semantic Search"]
            MEMORY --> EMBEDDINGS["AI Embeddings<br/>Context Vectors"]
        end
        
        subgraph "AI Provider System"
            AI_PROVIDER --> ANTHROPIC["Anthropic<br/>Claude Models"]
            AI_PROVIDER --> OPENAI["OpenAI<br/>GPT Models"]
            AI_PROVIDER --> GOOGLE["Google<br/>Gemini Models"]
            AI_PROVIDER --> OLLAMA["Ollama<br/>Local Models"]
            
            AI_PROVIDER --> MODEL_SWITCHING["Model Switching<br/>Runtime Provider Change"]
            AI_PROVIDER --> TOKEN_MGMT["Token Management<br/>Usage Tracking"]
            AI_PROVIDER --> STREAMING["Streaming Support<br/>Real-time Responses"]
        end
        
        subgraph "Configuration System"
            CONFIG --> CONFIG_MGR["Configuration Manager<br/>Schema Validation"]
            CONFIG --> ENCRYPTION["Encryption Service<br/>API Key Security"]
            CONFIG --> SECURITY_MODES["Security Modes<br/>safe/developer/default"]
            CONFIG --> APPROVALS["Approval System<br/>Operation Authorization"]
            
            CONFIG_MGR --> DEFAULTS["Default Settings<br/>Fallback Values"]
            CONFIG_MGR --> USER_PREF["User Preferences<br/>Custom Settings"]
            CONFIG_MGR --> VALIDATION["Schema Validation<br/>Type Safety"]
        end
        
        subgraph "Operating Modes"
            CLI --> DEFAULT_MODE["Default Mode<br/>Interactive Chat"]
            CLI --> PLANNING_MODE["Planning Mode<br/>Task Breakdown"]
            CLI --> AUTO_MODE["Auto Mode<br/>Autonomous Execution"]
            
            DEFAULT_MODE <--> MODE_SWITCHING["Mode Switching<br/>Shift+Tab"]
        end
        
        subgraph "External Integrations"
            WEB_SEARCH["Web Search<br/>Real-time Information"]
            NPM_REGISTRY["NPM Registry<br/>Package Management"]
            GIT_API["Git API<br/>Repository Operations"]
            VM_PROVIDERS["VM Providers<br/>Virtual Machine"]
            DOC_SOURCES["Documentation Sources<br/>Tech References"]
        end
        
        subgraph "Data Flow"
            INPUT["User Input"] --> PARSER["Command Parser"]
            PARSER --> VALIDATOR["Input Validator"]
            VALIDATOR --> ROUTER["Command Router"]
            ROUTER --> EXECUTOR["Task Executor"]
            EXECUTOR --> RESULTS["Results Formatter"]
            RESULTS --> OUTPUT["User Output"]
        end
        
        subgraph "Error Handling"
            CLI --> ERROR_HANDLER["Global Error Handler"]
            ERROR_HANDLER --> FALLBACK["Fallback Strategies"]
            ERROR_HANDLER --> RETRY["Retry Logic"]
            ERROR_HANDLER --> LOGGING["Error Logging"]
            ERROR_HANDLER --> USER_FEEDBACK["User Error Messages"]
        end
    end
    
    %% Styling
    classDef entryPoint fill:#ff6b6b,stroke:#c92a2a,color:#fff
    classDef coreService fill:#4dabf7,stroke:#339af0,color:#fff
    classDef agent fill:#51cf66,stroke:#37b24d,color:#fff
    classDef command fill:#ffd43b,stroke:#fab005,color:#000
    classDef tool fill:#ff8cc8,stroke:#e64980,color:#fff
    classDef context fill:#a9e34b,stroke:#74b816,color:#000
    classDef aiProvider fill:#da77f2,stroke:#be4bdb,color:#fff
    classDef config fill:#74c0fc,stroke:#4dabf7,color:#000
    classDef mode fill:#ffe066,stroke:#fcc419,color:#000
    classDef external fill:#8ce99a,stroke:#51cf66,color:#000
    classDef dataFlow fill:#ffa94d,stroke:#fd7e14,color:#000
    classDef error fill:#ff8787,stroke:#ff6b6b,color:#000
    
    class CLI,BIN,PKG entryPoint
    class CLI_SERVICE,PLANNER,TOOL_SVC,CONTEXT,AI_PROVIDER,ORCHESTRATOR coreService
    class UNIVERSAL,REACT,BACKEND,DEVOPS,CODE_REVIEW,OPTIMIZATION agent
    class BASIC,MODEL_MGMT,CONFIG,SESSION,AGENT_MGMT,PLANNING,SECURITY,FILE_OPS,TERMINAL,VM,AI_FEATURES,MEMORY command
    class FILE_TOOLS,EXEC_TOOLS,ANALYSIS_TOOLS,AI_TOOLS,DEV_TOOLS,DOC_TOOLS tool
    class WORKSPACE,GIT,DEPS,RECENT,OPEN_FILES,SNAPSHOTS,INDEX,EMBEDDINGS context
    class ANTHROPIC,OPENAI,GOOGLE,OLLAMA,MODEL_SWITCHING,TOKEN_MGMT,STREAMING aiProvider
    class CONFIG_MGR,ENCRYPTION,SECURITY_MODES,APPROVALS,DEFAULTS,USER_PREF,VALIDATION config
    class DEFAULT_MODE,PLANNING_MODE,AUTO_MODE,MODE_SWITCHING mode
    class WEB_SEARCH,NPM_REGISTRY,GIT_API,VM_PROVIDERS,DOC_SOURCES external
    class INPUT,PARSER,VALIDATOR,ROUTER,EXECUTOR,RESULTS,OUTPUT dataFlow
    class ERROR_HANDLER,FALLBACK,RETRY,LOGGING,USER_FEEDBACK error
